@model EscapeRoomWebAppCore.ViewModels.IndexViewModel

@{
    ViewData["Title"] = "Escape Rooms";
}
<style>
    @@font-face {
        font-family: 'FontAwesome';
        src: url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2') format('woff2'), url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff') format('woff'), url('https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/fonts/fontawesome-webfont.ttf') format('truetype');
        font-weight: normal;
        font-style: normal
    }

    .glyphicon {
        display: inline-block;
        font: normal normal normal 14px/1 FontAwesome;
        font-size: inherit;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }

    .glyphicon-chevron-right:before {
        content: "\f054";
    }

    .glyphicon-chevron-left:before {
        content: "\f053";
    }
</style>

<h1 class="text-center">Escape rooms</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

@if (Model?.EscapeRooms.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Time Limit Minutes
                </th>
                <th>
                    Minimum Player Age
                </th>
                <th>
                    Address
                </th>
                <th>
                    Phone Number
                </th>
                <th>
                    Rating
                </th>
                <th>
                    Fear Level
                </th>
                <th>
                    Difficulty Level
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.EscapeRooms)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeLimitMinutes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MinimumPlayerAge)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FearLevel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DifficultyLevel)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           class="btn btn-outline-dark">
            <i class="glyphicon glyphicon-chevron-left"></i>
            Back
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           class="btn btn-outline-dark">
            Next
            <i class="glyphicon glyphicon-chevron-right"></i>
        </a>
    }
}

else
{
    <p>No Items Found !!!</p>
}
